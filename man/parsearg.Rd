% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parseargs.r
\name{parsearg}
\alias{parsearg}
\title{Generica Para Parse De Argumentos Unicos}
\usage{
parsearg(campo, valor, is_mock = TRUE, ...)
}
\arguments{
\item{campo}{objeto da classe \code{campo} gerado por \code{\link{new_campo}}}

\item{valor}{o valor buscado na tabela para montar a query}

\item{is_mock}{booleano indicando se o parse de argumentos esta sendo feito para query num banco
mock ou relacional}

\item{...}{demais argumentos que possam existir nos metodos de cada tipo de dado}
}
\value{
string contendo o trecho de WHERE relacionado ao campo em questao
}
\description{
Funcao generica dos metodos de parse de argmumentos passados nas queries de tabela
}
\details{
\code{parseargs} e uma funcao generica para processar argumentos passados nas funcoes de query.
Cada tipo de campo (data, inteiro, string e etc.) possui um metodo proprio que retorna uma parte
do elemento WHERE da query associada ao campo passado.

No caso de campos do tipo \code{campo_data}, \code{valor} deve ser uma string indicando a faixa
de datahoras no formato \code{"YYYY[-MM-DD HH:MM:SS]/YYYY[-MM-DD HH:MM:SS]"}. As partes entre
colchetes sao opcionais, tanto no limite inicial quanto final.
}
\examples{

tab <- dbrenovaveis:::new_tabela(
    nome = "vazoes",
    campos = list(
        dbrenovaveis:::new_campo("data", "date"),
        dbrenovaveis:::new_campo("codigo", "string"),
        dbrenovaveis:::new_campo("valor", "string")
    ),
    uri = system.file("extdata/cpart_parquet/vazoes/", package = "dbrenovaveis"),
    tipo_arquivo = ".parquet.gzip"
)

parsed_codigo <- parsearg(tab$campos$codigo, 1:3)
\dontrun{
print(parsed_codigo[1])
#> "codigo IN (1,2,3)"
}

parsed_data <- parsearg(tab$campos$data, "2020/2021")
\dontrun{
print(parsed_data[1])
#> "data >= '2020-01-01 00:00:00' AND data < '2022-01-01 00:00:00'"
}


}
