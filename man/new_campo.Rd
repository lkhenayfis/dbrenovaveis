% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classe-tabela.r
\name{new_campo}
\alias{new_campo}
\title{Construtor Da Classe \code{campo}}
\usage{
new_campo(
  nome,
  tipo,
  foreignkey = FALSE,
  ref = NULL,
  camporef = NULL,
  proxy = NULL,
  alias = NULL
)
}
\arguments{
\item{nome}{o nome do campo (nome da coluna na tabela)}

\item{tipo}{o tipo de dado contido. Veja Detalhes para os tipos suportados e suas implicacoes}

\item{foreignkey}{booleano indicando se este campo e uma chave estrangeira}

\item{ref}{objeto \code{tabela} na qual se encontra a chave estrangeira. Ver Detalhes}

\item{camporef}{nome do campo da chave estrangeira na tabela de referencia. Ver Detalhes}

\item{proxy}{nome de um campo proxy para a busca de chave estrangeira. Ver Detalhes}

\item{alias}{nome pelo qual sera feito o subset deste campo nas funcoes de query}
}
\value{
Objeto da classe \code{campo} contendo especificacao de um campo qualquer
}
\description{
Funcao para geracao de objetos representativos de campos em tabelas num determinado banco
}
\details{
Esta classe compoe o coracao da representacao simbolica de tabelas, utilizada dentro de
\code{\link{new_tabela}} para especificacao das colunas. O argumento \code{tipo} permite detalhar
o tipo de dados contido neste campo, podendo ser um de:

\itemize{
\item{inteiro}
\item{string}
\item{float}
\item{data}
}

Cada tipo de dado gera um tipo especifico de query e possui funcionalidades proprias durante o
processamento de argumentos numa execucao de funcao para formar a query.

Todos os argumentos seguintes estao associados ao comportamento quando o campo especificado e uma
chave estrangeira, isto e, uma coluna de indices atrelada a outra tabela. \code{foreignkey}
permite informar se o campo e ou nao deste tipo. Caso seja \code{FALSE}, todos os arumentos
restantes sao ignorados e nao precisam ser especificados.

Do contrario, \code{ref} deve corresponder a um objeto da classe \code{tabela}, gerado por
\code{\link{new_tabela}} indicando em que tabela se encontra o dado de referencia.
\code{camporef} deve ser uma string indicando o nome do campo, na tabela de referencia, em que
se encontra a informacao original.

Por fim, \code{proxy} e um argumento especial utilizado para flexibilizacao de alguns
comportamentos. E possivel que o usuario queria pesquisar em uma tabela, por exemplo de dados
verificados, por usinas por seu codigo, apesar de estarem indexadas por indices inteiros simples.
Atraves do arguemento \code{proxy}, pode ser especificada uma coluna na tabela \code{ref} na qual
sera feita a pesquisa estrangeira, de modo que ainda se retornem os valores da coluna
\code{camporef}, necessarios para o subset apropriado. Veja os Exemplos para mais detalhes
}
\examples{

# Retomando os exemplos de 'new_tabela'

dirloc <- system.file("extdata/sempart", package = "dbrenovaveis")
conect <- conectalocal(dirloc)

tabusi <- new_tabela(
    nome = "usinas",
    campos = list(
        new_campo("id", "inteiro", FALSE),
        new_campo("codigo", "string", FALSE)),
    conexao = conect)

# Similar ao exemplo da descricao, vemos que a tabela de verificados nao possui uma coluna 
# 'codigo' com a qual pesquisar por usinas, apenas o id inteiro arbitrario.
# Ao especificar o campo 'id_usina' com proxy 'codigo' na tabela 'tabusi', o pacote sabera que
# uma query sobre usinas na tabela de verificados pode ser feita na coluna 'codigo' de 'tabusi'

tabverif <- new_tabela(
    nome = "verificados",
    campos = list(
        new_campo("id_usina", "inteiro", TRUE, tabusi, "id", "codigo"),
        new_campo("data_hora", "data", FALSE),
        new_campo("vento", "float", FALSE),
        new_campo("geracao", "float", FALSE)
    ),
    conexao = conect)

}
